<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xml:space="preserve">

    <!-- Copyright 2020-2021 Steinar Bang                                                -->
    <!--                                                                                 -->
    <!-- Licensed under the Apache License, Version 2.0 (the "License");                 -->
    <!-- you may not use this file except in compliance with the License.                -->
    <!-- You may obtain a copy of the License at                                         -->
    <!--   http://www.apache.org/licenses/LICENSE-2.0                                    -->
    <!-- Unless required by applicable law or agreed to in writing,                      -->
    <!-- software distributed under the License is distributed on an "AS IS" BASIS,      -->
    <!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.        -->
    <!-- See the License for the specific language governing permissions and limitations -->
    <!-- under the License.                                                              -->

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>no.priv.bang.pom</groupId>
        <artifactId>bang-pom</artifactId>
        <version>1.0.3</version>
    </parent>
    <groupId>no.priv.bang.oldalbum</groupId>
    <artifactId>oldalbum</artifactId>
    <version>1.8.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Oldalbum picture archive wrapper</name>
    <description>Displaying albums from the 90-ies in a modern way</description>

    <modules>
        <module>oldalbum.services</module>
        <module>oldalbum.roleadder.test</module>
        <module>oldalbum.db.liquibase</module>
        <module>oldalbum.db.liquibase.test</module>
        <module>oldalbum.backend</module>
        <module>oldalbum.web.security</module>
        <module>oldalbum.web.api</module>
        <module>oldalbum.web.frontend</module>
        <module>oldalbum.db.liquibase.urlinit</module>
        <module>oldalbum.db.liquibase.production</module>
        <module>karaf</module>
        <module>oldalbum.tests</module>
        <module>jacoco-coverage-report</module>
        <module>docker</module>
    </modules>

    <properties>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../jacoco-coverage-report/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <bang-osgi-service.version>1.7.2</bang-osgi-service.version>
        <osgi-service-adapters.version>1.1.1</osgi-service-adapters.version>
        <bang-servlet.version>1.5.1
        </bang-servlet.version>
        <authservice.version>1.13.1</authservice.version>
        <shiro.version>1.7.0</shiro.version>
        <beans.version>1.1.2</beans.version>
        <jackson.version>2.12.1</jackson.version>
        <jersey.version>2.33</jersey.version>
        <open-iconic.version>1.1.1</open-iconic.version>
        <sonar.cpd.exclusions>
            **/OldAlbumDerbyTestDatabase.java,
            **/OldAlbumProductionDatabase.java,
            **/AlbumEntry.java,
        </sonar.cpd.exclusions>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.karaf</groupId>
                <artifactId>karaf-bom</artifactId>
                <version>${karaf.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.beans</groupId>
                <artifactId>beans-bom</artifactId>
                <version>${beans.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.osgiservice</groupId>
                <artifactId>osgiservice-bom</artifactId>
                <version>${bang-osgi-service.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.osgi.service.adapters</groupId>
                <artifactId>adapters.logservice</artifactId>
                <version>${osgi-service-adapters.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.osgi.service.adapters</groupId>
                <artifactId>service-mocks</artifactId>
                <version>${osgi-service-adapters.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.servlet</groupId>
                <artifactId>servlet.frontend</artifactId>
                <version>${bang-servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>no.priv.bang.servlet</groupId>
                <artifactId>servlet.jersey</artifactId>
                <version>${bang-servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${shiro.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-moxy</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>1.13.1</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.bower</groupId>
                <artifactId>open-iconic</artifactId>
                <version>${open-iconic.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>ru.yaal.maven</groupId>
                                        <artifactId>write-text-files-maven-plugin</artifactId>
                                        <versionRange>[1.1,)</versionRange>
                                        <goals>
                                            <goal>
                                                write-text-files
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <releaseProfiles>release-sign-artifact</releaseProfiles>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <show>private</show>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <outputDirectory>${basedir}/target</outputDirectory>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <configuration>
                    <coberturaReports>
                        <coberturaReport>${basedir}/target/coverage.xml</coberturaReport>
                    </coberturaReports>
                </configuration>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>3.2.0</version>
            </extension>
        </extensions>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <licenses>
        <license>
            <name>Apache License version 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Steinar Bang</name>
            <email>sb@dod.no</email>
            <url>https://steinar.bang.priv.no/</url>
            <organization>steinarb-github</organization>
            <organizationUrl>https://github.com/steinarb</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/steinarb/oldalbum</url>
        <connection>scm:git:https://github.com/steinarb/oldalbum.git</connection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <url>https://github.com/steinarb/oldalbum/issues</url>
        <system>Github issue tracker</system>
    </issueManagement>

    <ciManagement>
        <url>https://travis-ci.org/steinarb/oldalbum</url>
        <system>travis-ci</system>
    </ciManagement>

    <url>http://steinarb.github.io/oldalbum/</url>

    <profiles>
        <profile>
            <id>release-sign-artifact</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>nexusDeployRelease</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
